{"version":3,"sources":["components/navigation/homeNavigation/homeNavigation.js","components/formFieldCheck/areFieldsValid.js","components/serverRequest/generalAccountPost.js","../node_modules/react-router/es/generatePath.js","../node_modules/react-router/es/Redirect.js","../node_modules/react-router-dom/es/Redirect.js","components/createAccount/createAccountForm/createAccountForm.js","components/serverRequest/createAccountPost.js","components/createAccount/createAccount.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_env__WEBPACK_IMPORTED_MODULE_2__","HomeNavigation","a","createElement","to","env","routePath","className","src","alt","isUsernameValid","username","length","console","log","test","isPasswordValid","password","areFieldsValid","data","generalAccountPost","url","Promise","resolve","reject","encoded","Object","keys","map","key","encodeURIComponent","join","fetch","method","credentials","headers","Content-Type","referrer","referrerPolicy","body","then","res","concat","status","JSON","stringify","catch","err","d","__webpack_exports__","patternCache","cacheCount","es_generatePath","pattern","arguments","undefined","params","cacheKey","cache","compiledGenerator","path_to_regexp_default","compile","generatePath_compileGenerator","generator","pretty","_extends","assign","target","i","source","prototype","hasOwnProperty","call","Redirect_Redirect","_React$Component","Redirect","instance","Constructor","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","apply","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","isStatic","context","router","staticContext","componentWillMount","browser_default","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","es","nextTo","props","warning_default","pathname","search","computeTo","_ref","computedMatch","history","push","replace","render","react_default","Component","propTypes","prop_types_default","object","bool","from","string","oneOfType","isRequired","defaultProps","contextTypes","shape","func","es_Redirect","CreateAccountForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","confirmPassword","accountCreated","redirectPath","onChange","bind","assertThisInitialized","onSubmit","authenticate","e","preventDefault","id","setState","_this2","_this$state","newNotification","authenticationURL","authenticationServer","createAccountPost","json","createAccount","error","Fragment","type","placeholder","required","onClick","CreateAccountFormContext","notificationContext","Consumer","authenticationContext","_ref2","createAccountForm_CreateAccountForm","CreateAccount","homeNavigation","createAccountForm","Link"],"mappings":"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","file":"static/js/1.a17f2336.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport env from '../../../env';\r\n\r\n\r\nconst HomeNavigation = () => {\r\n  return (\r\n    <Link to={env.routePath} className=\"navigate home abs-top-left\">\r\n      <img\r\n        src=\"./assets/svg/placeholder/round-back-arrow.svg\"\r\n        alt=\"navigate back to homepage\"\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HomeNavigation;\r\n","//returns true if username is in valid format\r\nconst isUsernameValid = username => {\r\n  const minUsernameLength = 4;\r\n  const maxUsernameLength = 15;\r\n  const invalidUsernameCharacters = /\\W+/; //username must only use [a-zA-Z0-9_]\r\n\r\n  //username not within range\r\n  if (\r\n    username.length < minUsernameLength ||\r\n    username.length > maxUsernameLength\r\n  ) {\r\n    console.log('Invalid username: must be 4 - 15 characters long.');\r\n    return false;\r\n  }\r\n\r\n  //username contains invalid characters\r\n  else if (invalidUsernameCharacters.test(username)) {\r\n    console.log(\r\n      'Invalid username: can ONLY contain letters, numbers, and an underscores (_)'\r\n    );\r\n    return false;\r\n  }\r\n\r\n  return true; //username is valid\r\n};\r\n\r\n//returns true if password is in valid format\r\nconst isPasswordValid = password => {\r\n  const minPasswordLength = 6;\r\n  const maxPasswordLength = 12;\r\n  const hasLetter = /[a-zA-Z]+/; //must have at least one letter\r\n  const hasNumber = /\\d+/; //must have at least one number\r\n  const hasSpaces = /\\s+/; //spaces in password are invalid\r\n  const hasSymbol = /\\W+/; //MUST have at least one symbol\r\n\r\n  //password not within range\r\n  if (\r\n    password.length < minPasswordLength ||\r\n    password.length > maxPasswordLength\r\n  ) {\r\n    console.log('Invalid password: must be 6 - 12 characters long');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have at least 1 letter\r\n  else if (!hasLetter.test(password)) {\r\n    console.log('Invalid password: must include at least 1 letter');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have at least 1 number\r\n  else if (!hasNumber.test(password)) {\r\n    console.log('Invalid password: must include at least 1 number');\r\n    return false;\r\n  }\r\n\r\n  //password has spaces D:\r\n  else if (hasSpaces.test(password)) {\r\n    console.log('Invalid password: cannot include spaces');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have a symbol D:\r\n  if (!hasSymbol.test(password)) {\r\n    console.log('Invalid password: MUST include at least 1 symbol');\r\n    return false;\r\n  }\r\n\r\n  return true; //password is valid\r\n};\r\n\r\n//returns true if both the username and password fields are valid\r\nfunction areFieldsValid(data) {\r\n  const { username, password } = data;\r\n\r\n  //username format is invalid\r\n  if (!isUsernameValid(username)) {\r\n    return false;\r\n  }\r\n\r\n  //password format is invalid\r\n  else if (!isPasswordValid(password)) {\r\n    return false;\r\n  }\r\n\r\n  return true; //username & password fields valid\r\n}\r\n\r\nexport default areFieldsValid;\r\n","//used for both createAccountPost() and loginPost()\r\n\r\nexport default function generalAccountPost(data, url) {\r\n  return new Promise((resolve, reject) => {\r\n    const encoded = Object.keys(data)\r\n      .map(key => {\r\n        return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\r\n      })\r\n      .join('&');\r\n\r\n    const postOptions = {\r\n      method: 'POST',\r\n      credentials: 'include', \r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      referrer: 'no-referrer',\r\n      referrerPolicy: 'no-referrer-when-downgrade',\r\n      body: encoded\r\n    };\r\n\r\n    return (\r\n      fetch(url, postOptions)\r\n        //.then(res => resolve(res))\r\n        .then(res => {\r\n          console.log(\r\n            `response status: ${res.status} | type: ${typeof res.status}`\r\n          );\r\n          console.log(`\\theaders: ${JSON.stringify(res.headers)}\\n`);\r\n\r\n          if (res.status === 404) {\r\n            console.log('\\t-404 status - rejecteddddd');\r\n            return reject('404 status - rejecteddddd');\r\n          }\r\n\r\n          //* attempting to pull json from response\r\n          return resolve(res);\r\n        })\r\n        .catch(err => reject(err))\r\n    );\r\n  });\r\n}\r\n","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\n\n\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n\n  var generator = compileGenerator(pattern);\n  return generator(params, {\n    pretty: true\n  });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\nexport default Redirect;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport env from '../../../env';\r\nimport AuthenticationContext from '../../authentication/authenticationContext';\r\nimport NotificationContext from '../../notification/notificationContext/notificationContext';\r\nimport areFieldsValid from '../../formFieldCheck/areFieldsValid';\r\nimport createAccountPost from '../../serverRequest/createAccountPost';\r\n\r\nclass CreateAccountForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      accountCreated: false // redirects to /profile if account is created\r\n    };\r\n\r\n    this.redirectPath = env.routePath + 'profile'; //* redirects user to profile if account is created \r\n    this.onChange = this.onChange.bind(this); // the user modified one of the input fields\r\n    this.onSubmit = this.onSubmit.bind(this); // the user submitted the form\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.accountCreated) {\r\n      // successfully created account\r\n      this.props.authenticate(this.state.username);\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    e.preventDefault();\r\n\r\n    switch (e.target.id) {\r\n    case 'username':\r\n      this.setState({ username: e.target.value });\r\n      break;\r\n\r\n    case 'password':\r\n      this.setState({ password: e.target.value });\r\n      break;\r\n\r\n    case 'confirm-password':\r\n      this.setState({ confirmPassword: e.target.value });\r\n      break;\r\n\r\n    default:\r\n      console.log(`ID \"${e.target.id}\" not found - no action taken`);\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { username, password, confirmPassword } = this.state;\r\n\r\n    if (areFieldsValid({ username: username, password: password })) {\r\n      // username & password fields valid\r\n      if (confirmPassword === password) {\r\n        // confirm password matches password\r\n\r\n        // put up \"checking username availability\" display while waiting\r\n        this.props.newNotification(\r\n          'Confirming new account with server...',\r\n          5000\r\n        );\r\n\r\n        createAccountPost({ username: username, password: password }) // asks the server to create a new account\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            if (res.createAccount === true) {\r\n              // account successfully created\r\n              this.setState({ accountCreated: true });\r\n            } else {\r\n              this.props.newNotification(\r\n                'Failed to create new account: username taken',\r\n                5000,\r\n                'error',\r\n              );\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error(err);\r\n            this.props.newNotification(\r\n              'Failed to connect to server',\r\n              5000,\r\n              'error'\r\n            );\r\n          });\r\n      } else {\r\n        console.log('password & confirm password don\\'t match D:');\r\n      }\r\n    } else {\r\n      console.log('invalid fields...no action taken');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            id=\"username\"\r\n            className=\"rounded-border\"\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n          <input\r\n            id=\"password\"\r\n            className=\"rounded-border\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n          <input\r\n            id=\"confirm-password\"\r\n            className=\"rounded-border\"\r\n            type=\"password\"\r\n            placeholder=\"confirm password\"\r\n            value={this.state.confirmPassword}\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n\r\n          <button id=\"submit\" type=\"submit\" onClick={this.onSubmit}>\r\n            SIGN UP\r\n          </button>\r\n        </form>\r\n\r\n        {this.state.accountCreated ? <Redirect to={this.redirectPath} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n/* used to pass in the authenticate and notification functions as props so they can be used in \r\n create account's lifecycle methods */\r\nconst CreateAccountFormContext = props => {\r\n  return (\r\n    <NotificationContext.Consumer>\r\n      {({ newNotification }) => (\r\n        <AuthenticationContext.Consumer>\r\n          {({ authenticate }) => (\r\n            <CreateAccountForm\r\n              {...props}\r\n              authenticate={authenticate}\r\n              newNotification={newNotification}\r\n            />\r\n          )}\r\n        </AuthenticationContext.Consumer>\r\n      )}\r\n    </NotificationContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CreateAccountFormContext;\r\n","import generalAccountPost from './generalAccountPost';\r\nimport env from '../../env';\r\n\r\nexport default function createAccountPost(data) {\r\n  //const authenticationURL = 'http://localhost:8080/create-account';\r\n  //const authenticationURL = 'https://afternoon-springs-45644.herokuapp.com/create-account';\r\n  //const authenticationURL = env.serverDomain + 'create-account';  \r\n\r\n  const authenticationURL = env.authenticationServer + 'create-account';\r\n  return generalAccountPost(data, authenticationURL);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport env from '../../env';\r\nimport HomeNavigation from '../navigation/homeNavigation/homeNavigation';\r\nimport CreateAccountForm from './createAccountForm/createAccountForm';\r\n\r\nconst CreateAccount = () => {\r\n  return (\r\n    <article id=\"create-account\" className=\"wrapper center\">\r\n      <HomeNavigation />\r\n      <h1>Create Account</h1>\r\n      <CreateAccountForm />\r\n\r\n      <p className=\"related-info\">\r\n        Already have an account?{' '}\r\n        <Link className=\"link-to-default\" to={`${env.routePath}login`}>\r\n          Login here\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default CreateAccount;\r\n"],"sourceRoot":""}