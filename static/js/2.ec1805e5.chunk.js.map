{"version":3,"sources":["../node_modules/react-router/es/generatePath.js","../node_modules/react-router/es/Redirect.js","../node_modules/react-router-dom/es/Redirect.js","components/navigation/homeNavigation/homeNavigation.js","components/formFieldCheck/areFieldsValid.js","components/serverRequest/generalAccountPost.js","components/login/loginForm/loginForm.js","components/serverRequest/loginPost.js","components/login/login.js"],"names":["patternCache","cacheCount","es_generatePath","pattern","arguments","length","undefined","params","cacheKey","cache","compiledGenerator","path_to_regexp_default","a","compile","generatePath_compileGenerator","generator","pretty","_extends","Object","assign","target","i","source","key","prototype","hasOwnProperty","call","Redirect_Redirect","_React$Component","Redirect","instance","Constructor","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","apply","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","isStatic","context","router","staticContext","componentWillMount","browser_default","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","es","to","nextTo","props","warning_default","pathname","search","computeTo","_ref","computedMatch","history","push","replace","render","react_default","Component","propTypes","prop_types_default","object","bool","from","string","oneOfType","isRequired","defaultProps","contextTypes","shape","func","es_Redirect","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_env__WEBPACK_IMPORTED_MODULE_2__","HomeNavigation","createElement","env","routePath","className","src","alt","isUsernameValid","username","console","log","test","isPasswordValid","password","areFieldsValid","data","generalAccountPost","url","Promise","resolve","reject","encoded","keys","map","encodeURIComponent","join","fetch","method","credentials","headers","Content-Type","referrer","referrerPolicy","body","then","res","concat","status","JSON","stringify","catch","err","d","LoginForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","loginSuccessful","usernameRef","React","createRef","passwordRef","focusInput","bind","assertThisInitialized","redirectPath","onChange","onSubmit","current","focus","authenticate","e","id","preventDefault","setState","_this2","_this$state","newNotification","loginURL","authenticationServer","loginPost","json","accountExists","Fragment","type","placeholder","ref","required","onClick","LoginFormContext","notificationContext","Consumer","authenticationContext","_ref2","loginForm_LoginForm","Login","homeNavigation","loginForm","Link"],"mappings":"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","file":"static/js/2.ec1805e5.chunk.js","sourcesContent":["import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\n\n\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n\n  var generator = compileGenerator(pattern);\n  return generator(params, {\n    pretty: true\n  });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\nexport default Redirect;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport env from '../../../env';\r\n\r\n\r\nconst HomeNavigation = () => {\r\n  return (\r\n    <Link to={env.routePath} className=\"navigate home abs-top-left\">\r\n      <img\r\n        src=\"./assets/svg/placeholder/round-back-arrow.svg\"\r\n        alt=\"navigate back to homepage\"\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HomeNavigation;\r\n","//returns true if username is in valid format\r\nconst isUsernameValid = username => {\r\n  const minUsernameLength = 4;\r\n  const maxUsernameLength = 15;\r\n  const invalidUsernameCharacters = /\\W+/; //username must only use [a-zA-Z0-9_]\r\n\r\n  //username not within range\r\n  if (\r\n    username.length < minUsernameLength ||\r\n    username.length > maxUsernameLength\r\n  ) {\r\n    console.log('Invalid username: must be 4 - 15 characters long.');\r\n    return false;\r\n  }\r\n\r\n  //username contains invalid characters\r\n  else if (invalidUsernameCharacters.test(username)) {\r\n    console.log(\r\n      'Invalid username: can ONLY contain letters, numbers, and an underscores (_)'\r\n    );\r\n    return false;\r\n  }\r\n\r\n  return true; //username is valid\r\n};\r\n\r\n//returns true if password is in valid format\r\nconst isPasswordValid = password => {\r\n  const minPasswordLength = 6;\r\n  const maxPasswordLength = 12;\r\n  const hasLetter = /[a-zA-Z]+/; //must have at least one letter\r\n  const hasNumber = /\\d+/; //must have at least one number\r\n  const hasSpaces = /\\s+/; //spaces in password are invalid\r\n  const hasSymbol = /\\W+/; //MUST have at least one symbol\r\n\r\n  //password not within range\r\n  if (\r\n    password.length < minPasswordLength ||\r\n    password.length > maxPasswordLength\r\n  ) {\r\n    console.log('Invalid password: must be 6 - 12 characters long');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have at least 1 letter\r\n  else if (!hasLetter.test(password)) {\r\n    console.log('Invalid password: must include at least 1 letter');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have at least 1 number\r\n  else if (!hasNumber.test(password)) {\r\n    console.log('Invalid password: must include at least 1 number');\r\n    return false;\r\n  }\r\n\r\n  //password has spaces D:\r\n  else if (hasSpaces.test(password)) {\r\n    console.log('Invalid password: cannot include spaces');\r\n    return false;\r\n  }\r\n\r\n  //password doesn't have a symbol D:\r\n  if (!hasSymbol.test(password)) {\r\n    console.log('Invalid password: MUST include at least 1 symbol');\r\n    return false;\r\n  }\r\n\r\n  return true; //password is valid\r\n};\r\n\r\n//returns true if both the username and password fields are valid\r\nfunction areFieldsValid(data) {\r\n  const { username, password } = data;\r\n\r\n  //username format is invalid\r\n  if (!isUsernameValid(username)) {\r\n    return false;\r\n  }\r\n\r\n  //password format is invalid\r\n  else if (!isPasswordValid(password)) {\r\n    return false;\r\n  }\r\n\r\n  return true; //username & password fields valid\r\n}\r\n\r\nexport default areFieldsValid;\r\n","//used for both createAccountPost() and loginPost()\r\n\r\nexport default function generalAccountPost(data, url) {\r\n  return new Promise((resolve, reject) => {\r\n    const encoded = Object.keys(data)\r\n      .map(key => {\r\n        return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\r\n      })\r\n      .join('&');\r\n\r\n    const postOptions = {\r\n      method: 'POST',\r\n      credentials: 'include', \r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      },\r\n      referrer: 'no-referrer',\r\n      referrerPolicy: 'no-referrer-when-downgrade',\r\n      body: encoded\r\n    };\r\n\r\n    return (\r\n      fetch(url, postOptions)\r\n        //.then(res => resolve(res))\r\n        .then(res => {\r\n          console.log(\r\n            `response status: ${res.status} | type: ${typeof res.status}`\r\n          );\r\n          console.log(`\\theaders: ${JSON.stringify(res.headers)}\\n`);\r\n\r\n          if (res.status === 404) {\r\n            console.log('\\t-404 status - rejecteddddd');\r\n            return reject('404 status - rejecteddddd');\r\n          }\r\n\r\n          //* attempting to pull json from response\r\n          return resolve(res);\r\n        })\r\n        .catch(err => reject(err))\r\n    );\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport env from '../../../env';\r\nimport AuthenticationContext from '../../authentication/authenticationContext';\r\nimport NotificationContext from '../../notification/notificationContext/notificationContext';\r\nimport areFieldsValid from '../../formFieldCheck/areFieldsValid';\r\nimport loginPost from '../../serverRequest/loginPost';\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      loginSuccessful: false // redirects to /profile if account is logged into\r\n    };\r\n\r\n    this.usernameRef = React.createRef();\r\n    this.passwordRef = React.createRef();\r\n    this.focusInput = this.focusInput.bind(this);\r\n\r\n    this.redirectPath = env.routePath + 'profile'; //* redirects user to profile on user login\r\n    this.onChange = this.onChange.bind(this); // user modified one of the inputfields\r\n    this.onSubmit = this.onSubmit.bind(this); // user submitted form\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.usernameRef.current.focus(); // focuses the username inputfield when the page loads\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.loginSuccessful) {\r\n      // updates authentication context in App.js\r\n      this.props.authenticate(this.state.username);\r\n    }\r\n  }\r\n\r\n  focusInput(e) {\r\n    console.log(`id: ${e.target.id}`);\r\n  }\r\n\r\n  onChange(e) {\r\n    e.preventDefault();\r\n\r\n    switch (e.target.id) {\r\n      case 'username':\r\n        this.setState({ username: e.target.value });\r\n        break;\r\n\r\n      case 'password':\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        console.log(`ID \"${e.target.id}\" not found - no action taken`);\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n\r\n    if (areFieldsValid({ username: username, password: password })) {\r\n      // username & password fields valid\r\n      this.props.newNotification('Verifying account...', 5000);\r\n\r\n      loginPost({ username: username, password: password }) // checks with server if account exists\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.accountExists === true) {\r\n            // user account exists - redirecting to /profile\r\n            this.setState({ loginSuccessful: true });\r\n          } else {\r\n            this.props.newNotification(\r\n              'Invalid username and/or password...',\r\n              5000,\r\n              'error'\r\n            );\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.props.newNotification(\r\n            'Failed to connect to server',\r\n            5000,\r\n            'error'\r\n          );\r\n        });\r\n    } else {\r\n      console.log('invalid fields...no action taken');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            id=\"username\"\r\n            className=\"rounded-border\"\r\n            type=\"text\"\r\n            placeholder=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n            ref={this.usernameRef}\r\n            required\r\n          />\r\n\r\n          <input\r\n            id=\"password\"\r\n            className=\"rounded-border\"\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            ref={this.passwordRef}\r\n            required\r\n          />\r\n\r\n          <button id=\"submit\" type=\"submit\" onClick={this.onSubmit}>\r\n            SIGN IN\r\n          </button>\r\n        </form>\r\n\r\n        {this.state.loginSuccessful ? (\r\n          <Redirect to={this.redirectPath} />\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n/* used to pass in the authenticate and notification functions as props so they can be used in \r\n create account's lifecycle methods */\r\nconst LoginFormContext = props => {\r\n  return (\r\n    <NotificationContext.Consumer>\r\n      {({ newNotification }) => (\r\n        <AuthenticationContext.Consumer>\r\n          {({ authenticate }) => (\r\n            <LoginForm\r\n              {...props}\r\n              authenticate={authenticate}\r\n              newNotification={newNotification}\r\n            />\r\n          )}\r\n        </AuthenticationContext.Consumer>\r\n      )}\r\n    </NotificationContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default LoginFormContext;\r\n","import generalAccountPost from './generalAccountPost';\r\nimport env from '../../env';\r\n\r\nexport default function loginPost(data) {\r\n  //const loginURL = 'http://localhost:8080/login';\r\n  //const loginURL = 'https://afternoon-springs-45644.herokuapp.com/login';\r\n  //const loginURL = env.serverDomain + 'login';\r\n  const loginURL = env.authenticationServer + 'login';\r\n  return generalAccountPost(data, loginURL);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport env from '../../env';\r\nimport HomeNavigation from '../navigation/homeNavigation/homeNavigation';\r\nimport LoginForm from './loginForm/loginForm';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <article id=\"login\" className=\"wrapper center\">\r\n      <HomeNavigation />\r\n      <h1>Login</h1>\r\n      <LoginForm />\r\n\r\n      <p className=\"related-info\">\r\n        {\"Think you have an account? We'll just see...\"}\r\n        <br />\r\n        Or create a new account{' '}\r\n        <Link to={`${env.routePath}create-account`} className=\"link-to-default\">\r\n          here\r\n        </Link>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}